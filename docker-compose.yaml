services:
  mdm:
    container_name: mdm
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    networks:
      - default

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB}
      PGUSER: ${SPRING_DATASOURCE_USERNAME}
    networks:
      - default
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${SPRING_DATASOURCE_DB} -U ${SPRING_DATASOURCE_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  postgres-data:

